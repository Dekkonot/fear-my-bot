local Discordia = require("discordia")
local Color = Discordia.Color

local GuildInfo = require("guild_info")
local Permissions = require("permissions")

local format = string.format

local COLORS = {
    ["clientInfo"] = Color.fromRGB(127, 0, 127),
    ["help"] = Color.fromRGB(0, 255, 0),
    ["helpCommand"] = Color.fromRGB(0, 255, 0),
}

local Embeds = {}

---Returns an embed built for the client info command.
---@param message Message
---@return table
function Embeds.clientInfo(message)
    local client = message.client
    return {embed = {
        color = COLORS.clientInfo.value,
        timestamp = message.timestamp,
        fields = {
            {
                name = "Shards",
                value = format("%i/%i", client.shardCount, client.totalShardCount),
                inline = false,
            },
            {
                name = "Guild Count",
                value = format("%i", client.guilds:count()),
                inline = true,
            },
            {
                name = "User Count",
                value = format("%i", client.users:count()),
                inline = true,
            }
        }
    }}
end

---Returns an embed built for the help command with no arguments.
---@param guild Guild
---@param user User
---@return table
function Embeds.help(guild, user)
    local settings = GuildInfo.getSettings(guild)
    local prefix = settings.prefix
    local usableCommands = Permissions.usableCommandList(guild, user)
    return {embed = {
        color = COLORS.help.value,
        footer = {
            text = format("Generated by %s", user.name),
        },
        description = format([[This is a list of all commands that are available to you. For help with a particular command, use `%shelp` followed by that command's name (for example: `%shelp help`)
```
%s
```
]], prefix, prefix, usableCommands),
    }}
end

---Returns an embed built to provide help for a specific command.
---@param guild Guild
---@param commandData Command
---@return table
function Embeds.commandHelp(guild, commandData)
    local settings = GuildInfo.getSettings(guild)
    local prefix = settings.prefix

    local userPerms = commandData.user_permissions

    local permissionLevel = "No special perms required"
    if userPerms.bot_owner then
        permissionLevel = "Bot owner only"
    elseif userPerms.manage_server then
        permissionLevel = "Manage Server required"
    elseif userPerms.moderator then
        permissionLevel = "Elevated permissions required"
    end

    local embed = {
        color = COLORS.helpCommand.value,
        footer = {
            text = format("Try %shelp to get a list of available commands.", prefix),
        },
        description = commandData.description,
        fields = {
            {
                name = "Format",
                value = format("`%s%s`", prefix, commandData.signature),
                inline = true,
            },
            {
                name = "Permission Level",
                value = permissionLevel,
                inline = true,
            },
        }
    }

    if #commandData.arguments ~= 0 then
        embed.fields[3] = {
            name = "Arguments",
            value = table.concat(commandData.arguments, "\n")
        }
    end

    return {embed = embed}
end

return Embeds